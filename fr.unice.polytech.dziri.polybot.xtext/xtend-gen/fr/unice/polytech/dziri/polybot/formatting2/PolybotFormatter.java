/**
 * generated by Xtext 2.14.0
 */
package fr.unice.polytech.dziri.polybot.formatting2;

import com.google.inject.Inject;
import fr.unice.polytech.dziri.polybot.services.PolybotGrammarAccess;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import polybot.Bot;
import polybot.Instruction;
import polybot.Point;

@SuppressWarnings("all")
public class PolybotFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private PolybotGrammarAccess _polybotGrammarAccess;
  
  protected void _format(final Bot bot, @Extension final IFormattableDocument document) {
    document.<Point>format(bot.getInitialPosition());
    EList<Instruction> _instructionList = bot.getInstructionList();
    for (final Instruction instruction : _instructionList) {
      document.<Instruction>format(instruction);
    }
  }
  
  public void format(final Object bot, final IFormattableDocument document) {
    if (bot instanceof XtextResource) {
      _format((XtextResource)bot, document);
      return;
    } else if (bot instanceof Bot) {
      _format((Bot)bot, document);
      return;
    } else if (bot instanceof EObject) {
      _format((EObject)bot, document);
      return;
    } else if (bot == null) {
      _format((Void)null, document);
      return;
    } else if (bot != null) {
      _format(bot, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(bot, document).toString());
    }
  }
}
