/*
 * generated by Xtext 2.14.0
 */
grammar InternalPolybot;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.unice.polytech.dziri.polybot.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.unice.polytech.dziri.polybot.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.unice.polytech.dziri.polybot.services.PolybotGrammarAccess;

}
@parser::members {
	private PolybotGrammarAccess grammarAccess;

	public void setGrammarAccess(PolybotGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleBot
entryRuleBot
:
{ before(grammarAccess.getBotRule()); }
	 ruleBot
{ after(grammarAccess.getBotRule()); } 
	 EOF 
;

// Rule Bot
ruleBot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBotAccess().getGroup()); }
		(rule__Bot__Group__0)
		{ after(grammarAccess.getBotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
		(rule__Instruction__Alternatives)
		{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMove
entryRuleMove
:
{ before(grammarAccess.getMoveRule()); }
	 ruleMove
{ after(grammarAccess.getMoveRule()); } 
	 EOF 
;

// Rule Move
ruleMove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoveAccess().getAlternatives()); }
		(rule__Move__Alternatives)
		{ after(grammarAccess.getMoveAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePoint
entryRulePoint
:
{ before(grammarAccess.getPointRule()); }
	 rulePoint
{ after(grammarAccess.getPointRule()); } 
	 EOF 
;

// Rule Point
rulePoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointAccess().getGroup()); }
		(rule__Point__Group__0)
		{ after(grammarAccess.getPointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGoTo
entryRuleGoTo
:
{ before(grammarAccess.getGoToRule()); }
	 ruleGoTo
{ after(grammarAccess.getGoToRule()); } 
	 EOF 
;

// Rule GoTo
ruleGoTo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoToAccess().getGroup()); }
		(rule__GoTo__Group__0)
		{ after(grammarAccess.getGoToAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRight
entryRuleRight
:
{ before(grammarAccess.getRightRule()); }
	 ruleRight
{ after(grammarAccess.getRightRule()); } 
	 EOF 
;

// Rule Right
ruleRight 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightAccess().getGroup()); }
		(rule__Right__Group__0)
		{ after(grammarAccess.getRightAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeft
entryRuleLeft
:
{ before(grammarAccess.getLeftRule()); }
	 ruleLeft
{ after(grammarAccess.getLeftRule()); } 
	 EOF 
;

// Rule Left
ruleLeft 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftAccess().getGroup()); }
		(rule__Left__Group__0)
		{ after(grammarAccess.getLeftAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReverse
entryRuleReverse
:
{ before(grammarAccess.getReverseRule()); }
	 ruleReverse
{ after(grammarAccess.getReverseRule()); } 
	 EOF 
;

// Rule Reverse
ruleReverse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReverseAccess().getGroup()); }
		(rule__Reverse__Group__0)
		{ after(grammarAccess.getReverseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForward
entryRuleForward
:
{ before(grammarAccess.getForwardRule()); }
	 ruleForward
{ after(grammarAccess.getForwardRule()); } 
	 EOF 
;

// Rule Forward
ruleForward 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForwardAccess().getGroup()); }
		(rule__Forward__Group__0)
		{ after(grammarAccess.getForwardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfObjectDetected
entryRuleIfObjectDetected
:
{ before(grammarAccess.getIfObjectDetectedRule()); }
	 ruleIfObjectDetected
{ after(grammarAccess.getIfObjectDetectedRule()); } 
	 EOF 
;

// Rule IfObjectDetected
ruleIfObjectDetected 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfObjectDetectedAccess().getGroup()); }
		(rule__IfObjectDetected__Group__0)
		{ after(grammarAccess.getIfObjectDetectedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfObstacleDetected
entryRuleIfObstacleDetected
:
{ before(grammarAccess.getIfObstacleDetectedRule()); }
	 ruleIfObstacleDetected
{ after(grammarAccess.getIfObstacleDetectedRule()); } 
	 EOF 
;

// Rule IfObstacleDetected
ruleIfObstacleDetected 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfObstacleDetectedAccess().getGroup()); }
		(rule__IfObstacleDetected__Group__0)
		{ after(grammarAccess.getIfObstacleDetectedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTakeDropObject
entryRuleTakeDropObject
:
{ before(grammarAccess.getTakeDropObjectRule()); }
	 ruleTakeDropObject
{ after(grammarAccess.getTakeDropObjectRule()); } 
	 EOF 
;

// Rule TakeDropObject
ruleTakeDropObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTakeDropObjectAccess().getGroup()); }
		(rule__TakeDropObject__Group__0)
		{ after(grammarAccess.getTakeDropObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhile
entryRuleWhile
:
{ before(grammarAccess.getWhileRule()); }
	 ruleWhile
{ after(grammarAccess.getWhileRule()); } 
	 EOF 
;

// Rule While
ruleWhile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileAccess().getGroup()); }
		(rule__While__Group__0)
		{ after(grammarAccess.getWhileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getMoveParserRuleCall_0()); }
		ruleMove
		{ after(grammarAccess.getInstructionAccess().getMoveParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getTakeDropObjectParserRuleCall_1()); }
		ruleTakeDropObject
		{ after(grammarAccess.getInstructionAccess().getTakeDropObjectParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getWhileParserRuleCall_2()); }
		ruleWhile
		{ after(grammarAccess.getInstructionAccess().getWhileParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getIfObstacleDetectedParserRuleCall_3()); }
		ruleIfObstacleDetected
		{ after(grammarAccess.getInstructionAccess().getIfObstacleDetectedParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getIfObjectDetectedParserRuleCall_4()); }
		ruleIfObjectDetected
		{ after(grammarAccess.getInstructionAccess().getIfObjectDetectedParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Move__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoveAccess().getGoToParserRuleCall_0()); }
		ruleGoTo
		{ after(grammarAccess.getMoveAccess().getGoToParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getRightParserRuleCall_1()); }
		ruleRight
		{ after(grammarAccess.getMoveAccess().getRightParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getLeftParserRuleCall_2()); }
		ruleLeft
		{ after(grammarAccess.getMoveAccess().getLeftParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getReverseParserRuleCall_3()); }
		ruleReverse
		{ after(grammarAccess.getMoveAccess().getReverseParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getMoveAccess().getForwardParserRuleCall_4()); }
		ruleForward
		{ after(grammarAccess.getMoveAccess().getForwardParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group__0__Impl
	rule__Bot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getBotAction_0()); }
	()
	{ after(grammarAccess.getBotAccess().getBotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group__1__Impl
	rule__Bot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getBotKeyword_1()); }
	'Bot'
	{ after(grammarAccess.getBotAccess().getBotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group__2__Impl
	rule__Bot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getBotAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group__3__Impl
	rule__Bot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getGroup_3()); }
	(rule__Bot__Group_3__0)?
	{ after(grammarAccess.getBotAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group__4__Impl
	rule__Bot__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getGroup_4()); }
	(rule__Bot__Group_4__0)?
	{ after(grammarAccess.getBotAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getBotAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bot__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group_3__0__Impl
	rule__Bot__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getInitKeyword_3_0()); }
	'init'
	{ after(grammarAccess.getBotAccess().getInitKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getInitialPositionAssignment_3_1()); }
	(rule__Bot__InitialPositionAssignment_3_1)
	{ after(grammarAccess.getBotAccess().getInitialPositionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bot__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group_4__0__Impl
	rule__Bot__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getInstructionListKeyword_4_0()); }
	'instructionList'
	{ after(grammarAccess.getBotAccess().getInstructionListKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group_4__1__Impl
	rule__Bot__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getBotAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group_4__2__Impl
	rule__Bot__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getInstructionListAssignment_4_2()); }
	(rule__Bot__InstructionListAssignment_4_2)
	{ after(grammarAccess.getBotAccess().getInstructionListAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group_4__3__Impl
	rule__Bot__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getGroup_4_3()); }
	(rule__Bot__Group_4_3__0)*
	{ after(grammarAccess.getBotAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getBotAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bot__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group_4_3__0__Impl
	rule__Bot__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getBotAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bot__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBotAccess().getInstructionListAssignment_4_3_1()); }
	(rule__Bot__InstructionListAssignment_4_3_1)
	{ after(grammarAccess.getBotAccess().getInstructionListAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__0__Impl
	rule__Point__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getPointAction_0()); }
	()
	{ after(grammarAccess.getPointAccess().getPointAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__1__Impl
	rule__Point__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getPointKeyword_1()); }
	'Point'
	{ after(grammarAccess.getPointAccess().getPointKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__2__Impl
	rule__Point__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getPointAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__3__Impl
	rule__Point__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getXAssignment_3()); }
	(rule__Point__XAssignment_3)
	{ after(grammarAccess.getPointAccess().getXAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__4__Impl
	rule__Point__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getPointAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__5__Impl
	rule__Point__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getYAssignment_5()); }
	(rule__Point__YAssignment_5)
	{ after(grammarAccess.getPointAccess().getYAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getPointAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GoTo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoTo__Group__0__Impl
	rule__GoTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoToAccess().getGoToAction_0()); }
	()
	{ after(grammarAccess.getGoToAccess().getGoToAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoTo__Group__1__Impl
	rule__GoTo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoToAccess().getGoToKeyword_1()); }
	'GoTo'
	{ after(grammarAccess.getGoToAccess().getGoToKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoTo__Group__2__Impl
	rule__GoTo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoToAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getGoToAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoTo__Group__3__Impl
	rule__GoTo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoToAccess().getSpeedAssignment_3()); }
	(rule__GoTo__SpeedAssignment_3)
	{ after(grammarAccess.getGoToAccess().getSpeedAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoTo__Group__4__Impl
	rule__GoTo__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoToAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getGoToAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoTo__Group__5__Impl
	rule__GoTo__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoToAccess().getDurationAssignment_5()); }
	(rule__GoTo__DurationAssignment_5)
	{ after(grammarAccess.getGoToAccess().getDurationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoTo__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoToAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getGoToAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Right__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Right__Group__0__Impl
	rule__Right__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAccess().getRightAction_0()); }
	()
	{ after(grammarAccess.getRightAccess().getRightAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Right__Group__1__Impl
	rule__Right__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAccess().getRightKeyword_1()); }
	'Right'
	{ after(grammarAccess.getRightAccess().getRightKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Right__Group__2__Impl
	rule__Right__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getRightAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Right__Group__3__Impl
	rule__Right__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAccess().getSpeedAssignment_3()); }
	(rule__Right__SpeedAssignment_3)
	{ after(grammarAccess.getRightAccess().getSpeedAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Right__Group__4__Impl
	rule__Right__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getRightAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Right__Group__5__Impl
	rule__Right__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAccess().getDurationAssignment_5()); }
	(rule__Right__DurationAssignment_5)
	{ after(grammarAccess.getRightAccess().getDurationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Right__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getRightAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Left__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left__Group__0__Impl
	rule__Left__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAccess().getLeftAction_0()); }
	()
	{ after(grammarAccess.getLeftAccess().getLeftAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left__Group__1__Impl
	rule__Left__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAccess().getLeftKeyword_1()); }
	'Left'
	{ after(grammarAccess.getLeftAccess().getLeftKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left__Group__2__Impl
	rule__Left__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getLeftAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left__Group__3__Impl
	rule__Left__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAccess().getSpeedAssignment_3()); }
	(rule__Left__SpeedAssignment_3)
	{ after(grammarAccess.getLeftAccess().getSpeedAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left__Group__4__Impl
	rule__Left__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getLeftAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left__Group__5__Impl
	rule__Left__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAccess().getDurationAssignment_5()); }
	(rule__Left__DurationAssignment_5)
	{ after(grammarAccess.getLeftAccess().getDurationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Left__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getLeftAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reverse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reverse__Group__0__Impl
	rule__Reverse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reverse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReverseAccess().getReverseAction_0()); }
	()
	{ after(grammarAccess.getReverseAccess().getReverseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reverse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reverse__Group__1__Impl
	rule__Reverse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reverse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReverseAccess().getReverseKeyword_1()); }
	'Reverse'
	{ after(grammarAccess.getReverseAccess().getReverseKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reverse__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reverse__Group__2__Impl
	rule__Reverse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reverse__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReverseAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getReverseAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reverse__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reverse__Group__3__Impl
	rule__Reverse__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reverse__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReverseAccess().getSpeedAssignment_3()); }
	(rule__Reverse__SpeedAssignment_3)
	{ after(grammarAccess.getReverseAccess().getSpeedAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reverse__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reverse__Group__4__Impl
	rule__Reverse__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Reverse__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReverseAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getReverseAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reverse__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reverse__Group__5__Impl
	rule__Reverse__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Reverse__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReverseAccess().getDurationAssignment_5()); }
	(rule__Reverse__DurationAssignment_5)
	{ after(grammarAccess.getReverseAccess().getDurationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reverse__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reverse__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reverse__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReverseAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getReverseAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Forward__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forward__Group__0__Impl
	rule__Forward__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForwardAccess().getForwardAction_0()); }
	()
	{ after(grammarAccess.getForwardAccess().getForwardAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forward__Group__1__Impl
	rule__Forward__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForwardAccess().getForwardKeyword_1()); }
	'Forward'
	{ after(grammarAccess.getForwardAccess().getForwardKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forward__Group__2__Impl
	rule__Forward__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForwardAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getForwardAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forward__Group__3__Impl
	rule__Forward__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForwardAccess().getSpeedAssignment_3()); }
	(rule__Forward__SpeedAssignment_3)
	{ after(grammarAccess.getForwardAccess().getSpeedAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forward__Group__4__Impl
	rule__Forward__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForwardAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getForwardAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forward__Group__5__Impl
	rule__Forward__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForwardAccess().getDurationAssignment_5()); }
	(rule__Forward__DurationAssignment_5)
	{ after(grammarAccess.getForwardAccess().getDurationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forward__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForwardAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getForwardAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfObjectDetected__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObjectDetected__Group__0__Impl
	rule__IfObjectDetected__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObjectDetectedAccess().getIfObjectDetectedAction_0()); }
	()
	{ after(grammarAccess.getIfObjectDetectedAccess().getIfObjectDetectedAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObjectDetected__Group__1__Impl
	rule__IfObjectDetected__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObjectDetectedAccess().getIfObjectDetectedKeyword_1()); }
	'IfObjectDetected'
	{ after(grammarAccess.getIfObjectDetectedAccess().getIfObjectDetectedKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObjectDetected__Group__2__Impl
	rule__IfObjectDetected__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObjectDetectedAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getIfObjectDetectedAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObjectDetected__Group__3__Impl
	rule__IfObjectDetected__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObjectDetectedAccess().getGroup_3()); }
	(rule__IfObjectDetected__Group_3__0)
	{ after(grammarAccess.getIfObjectDetectedAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObjectDetected__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObjectDetectedAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getIfObjectDetectedAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfObjectDetected__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObjectDetected__Group_3__0__Impl
	rule__IfObjectDetected__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObjectDetectedAccess().getListOfInstructionsAssignment_3_0()); }
	(rule__IfObjectDetected__ListOfInstructionsAssignment_3_0)
	{ after(grammarAccess.getIfObjectDetectedAccess().getListOfInstructionsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObjectDetected__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObjectDetectedAccess().getGroup_3_1()); }
	(rule__IfObjectDetected__Group_3_1__0)*
	{ after(grammarAccess.getIfObjectDetectedAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfObjectDetected__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObjectDetected__Group_3_1__0__Impl
	rule__IfObjectDetected__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObjectDetectedAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getIfObjectDetectedAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObjectDetected__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObjectDetectedAccess().getListOfInstructionsAssignment_3_1_1()); }
	(rule__IfObjectDetected__ListOfInstructionsAssignment_3_1_1)
	{ after(grammarAccess.getIfObjectDetectedAccess().getListOfInstructionsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfObstacleDetected__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObstacleDetected__Group__0__Impl
	rule__IfObstacleDetected__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObstacleDetectedAccess().getIfObstacleDetectedAction_0()); }
	()
	{ after(grammarAccess.getIfObstacleDetectedAccess().getIfObstacleDetectedAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObstacleDetected__Group__1__Impl
	rule__IfObstacleDetected__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObstacleDetectedAccess().getIfObstacleDetectedKeyword_1()); }
	'IfObstacleDetected'
	{ after(grammarAccess.getIfObstacleDetectedAccess().getIfObstacleDetectedKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObstacleDetected__Group__2__Impl
	rule__IfObstacleDetected__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObstacleDetectedAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getIfObstacleDetectedAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObstacleDetected__Group__3__Impl
	rule__IfObstacleDetected__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObstacleDetectedAccess().getGroup_3()); }
	(rule__IfObstacleDetected__Group_3__0)
	{ after(grammarAccess.getIfObstacleDetectedAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObstacleDetected__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObstacleDetectedAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getIfObstacleDetectedAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfObstacleDetected__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObstacleDetected__Group_3__0__Impl
	rule__IfObstacleDetected__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObstacleDetectedAccess().getListOfInstructionsAssignment_3_0()); }
	(rule__IfObstacleDetected__ListOfInstructionsAssignment_3_0)
	{ after(grammarAccess.getIfObstacleDetectedAccess().getListOfInstructionsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObstacleDetected__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObstacleDetectedAccess().getGroup_3_1()); }
	(rule__IfObstacleDetected__Group_3_1__0)*
	{ after(grammarAccess.getIfObstacleDetectedAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfObstacleDetected__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObstacleDetected__Group_3_1__0__Impl
	rule__IfObstacleDetected__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObstacleDetectedAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getIfObstacleDetectedAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfObstacleDetected__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfObstacleDetectedAccess().getListOfInstructionsAssignment_3_1_1()); }
	(rule__IfObstacleDetected__ListOfInstructionsAssignment_3_1_1)
	{ after(grammarAccess.getIfObstacleDetectedAccess().getListOfInstructionsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TakeDropObject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TakeDropObject__Group__0__Impl
	rule__TakeDropObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TakeDropObject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTakeDropObjectAccess().getTakeDropObjectAction_0()); }
	()
	{ after(grammarAccess.getTakeDropObjectAccess().getTakeDropObjectAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TakeDropObject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TakeDropObject__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TakeDropObject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTakeDropObjectAccess().getTakeDropObjectKeyword_1()); }
	'TakeDropObject'
	{ after(grammarAccess.getTakeDropObjectAccess().getTakeDropObjectKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__0__Impl
	rule__While__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getWhileAction_0()); }
	()
	{ after(grammarAccess.getWhileAccess().getWhileAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__1__Impl
	rule__While__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getWhileKeyword_1()); }
	'While'
	{ after(grammarAccess.getWhileAccess().getWhileKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__2__Impl
	rule__While__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getWhileAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__3__Impl
	rule__While__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getNbAssignment_3()); }
	(rule__While__NbAssignment_3)
	{ after(grammarAccess.getWhileAccess().getNbAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__4__Impl
	rule__While__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getWhileAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__5__Impl
	rule__While__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getWhileAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__6__Impl
	rule__While__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getGroup_6()); }
	(rule__While__Group_6__0)
	{ after(grammarAccess.getWhileAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getWhileAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group_6__0__Impl
	rule__While__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getListOfInstructionsAssignment_6_0()); }
	(rule__While__ListOfInstructionsAssignment_6_0)
	{ after(grammarAccess.getWhileAccess().getListOfInstructionsAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getGroup_6_1()); }
	(rule__While__Group_6_1__0)*
	{ after(grammarAccess.getWhileAccess().getGroup_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group_6_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group_6_1__0__Impl
	rule__While__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group_6_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getCommaKeyword_6_1_0()); }
	','
	{ after(grammarAccess.getWhileAccess().getCommaKeyword_6_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group_6_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group_6_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getListOfInstructionsAssignment_6_1_1()); }
	(rule__While__ListOfInstructionsAssignment_6_1_1)
	{ after(grammarAccess.getWhileAccess().getListOfInstructionsAssignment_6_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bot__InitialPositionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBotAccess().getInitialPositionPointParserRuleCall_3_1_0()); }
		rulePoint
		{ after(grammarAccess.getBotAccess().getInitialPositionPointParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__InstructionListAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBotAccess().getInstructionListInstructionParserRuleCall_4_2_0()); }
		ruleInstruction
		{ after(grammarAccess.getBotAccess().getInstructionListInstructionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bot__InstructionListAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBotAccess().getInstructionListInstructionParserRuleCall_4_3_1_0()); }
		ruleInstruction
		{ after(grammarAccess.getBotAccess().getInstructionListInstructionParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__XAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getXEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getPointAccess().getXEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__YAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getYEIntParserRuleCall_5_0()); }
		ruleEInt
		{ after(grammarAccess.getPointAccess().getYEIntParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__SpeedAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoToAccess().getSpeedEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getGoToAccess().getSpeedEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__DurationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoToAccess().getDurationEIntParserRuleCall_5_0()); }
		ruleEInt
		{ after(grammarAccess.getGoToAccess().getDurationEIntParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__SpeedAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAccess().getSpeedEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getRightAccess().getSpeedEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Right__DurationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightAccess().getDurationEIntParserRuleCall_5_0()); }
		ruleEInt
		{ after(grammarAccess.getRightAccess().getDurationEIntParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__SpeedAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAccess().getSpeedEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getLeftAccess().getSpeedEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Left__DurationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftAccess().getDurationEIntParserRuleCall_5_0()); }
		ruleEInt
		{ after(grammarAccess.getLeftAccess().getDurationEIntParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reverse__SpeedAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReverseAccess().getSpeedEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getReverseAccess().getSpeedEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reverse__DurationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReverseAccess().getDurationEIntParserRuleCall_5_0()); }
		ruleEInt
		{ after(grammarAccess.getReverseAccess().getDurationEIntParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__SpeedAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForwardAccess().getSpeedEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getForwardAccess().getSpeedEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__DurationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForwardAccess().getDurationEIntParserRuleCall_5_0()); }
		ruleEInt
		{ after(grammarAccess.getForwardAccess().getDurationEIntParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__ListOfInstructionsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfObjectDetectedAccess().getListOfInstructionsInstructionParserRuleCall_3_0_0()); }
		ruleInstruction
		{ after(grammarAccess.getIfObjectDetectedAccess().getListOfInstructionsInstructionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObjectDetected__ListOfInstructionsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfObjectDetectedAccess().getListOfInstructionsInstructionParserRuleCall_3_1_1_0()); }
		ruleInstruction
		{ after(grammarAccess.getIfObjectDetectedAccess().getListOfInstructionsInstructionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__ListOfInstructionsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfObstacleDetectedAccess().getListOfInstructionsInstructionParserRuleCall_3_0_0()); }
		ruleInstruction
		{ after(grammarAccess.getIfObstacleDetectedAccess().getListOfInstructionsInstructionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfObstacleDetected__ListOfInstructionsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfObstacleDetectedAccess().getListOfInstructionsInstructionParserRuleCall_3_1_1_0()); }
		ruleInstruction
		{ after(grammarAccess.getIfObstacleDetectedAccess().getListOfInstructionsInstructionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__NbAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getNbEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getWhileAccess().getNbEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__ListOfInstructionsAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getListOfInstructionsInstructionParserRuleCall_6_0_0()); }
		ruleInstruction
		{ after(grammarAccess.getWhileAccess().getListOfInstructionsInstructionParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__ListOfInstructionsAssignment_6_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getListOfInstructionsInstructionParserRuleCall_6_1_1_0()); }
		ruleInstruction
		{ after(grammarAccess.getWhileAccess().getListOfInstructionsInstructionParserRuleCall_6_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
